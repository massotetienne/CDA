{"ast":null,"code":"var _jsxFileName = \"/home/etienne/Bureau/dev/CDA/Front/src/components/Countries.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setplayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selecetedRadio, setSelecetedRadio] = useState('');\n  const radios = ['Africa', 'America', 'Asia', 'Oceania', 'Europe'];\n  useEffect(() => {\n    if (playOnce) {\n      axios.get(\"https://restcountries.com/v3.1/all\").then(res => setData(res.data));\n      setplayOnce(false);\n    }\n\n    console.log(data);\n\n    const sortedCountry = () => {\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n\n    sortedCountry();\n  }, [data, rangeValue, playOnce]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(radio => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: radio,\n              id: radio,\n              checked: radio === selecetedRadio,\n              onChange: e => setSelecetedRadio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: radio,\n              children: radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, radio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      children: selecetedRadio && /*#__PURE__*/_jsxDEV(\"h5\", {\n        onClick: () => setSelecetedRadio(\"\"),\n        children: \"Annuler recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: sortedData.filter(country => country.region.includes(selecetedRadio)).map((country, index) => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"+qZP6W/0NhoiWGHAjp5cQNn9aMQ=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/home/etienne/Bureau/dev/CDA/Front/src/components/Countries.jsx"],"names":["React","useEffect","useState","axios","Card","Countries","data","setData","sortedData","setSortedData","playOnce","setplayOnce","rangeValue","setRangeValue","selecetedRadio","setSelecetedRadio","radios","get","then","res","console","log","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","e","target","value","radio","filter","country","region","includes","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\n\nconst Countries = () => {\n    const [data, setData] = useState([]);\n    const [sortedData, setSortedData] = useState([]);\n    const [playOnce, setplayOnce] = useState(true);\n    const [rangeValue, setRangeValue] = useState(40);\n    const [selecetedRadio, setSelecetedRadio] = useState('');\n    const radios = ['Africa', 'America', 'Asia', 'Oceania', 'Europe']\n\n    useEffect(() => {\n        if (playOnce) {\n            axios\n                .get(\n                    \"https://restcountries.com/v3.1/all\"\n                )\n\n                .then((res) =>\n                    setData(res.data));\n            setplayOnce(false);\n        }\n        console.log(data);\n\n        const sortedCountry = () => {\n            const countryObj = Object.keys(data).map((i) => data[i]);\n            const sortedArray = countryObj.sort((a, b) => {\n                return b.population - a.population\n            });\n            sortedArray.length = rangeValue;\n            setSortedData(sortedArray)\n        };\n        sortedCountry();\n    }, [data, rangeValue, playOnce]);\n\n\n    return (\n        <div className=\"countries\">\n            <div className=\"sort-container\" >\n                <input type=\"range\" min=\"1\" max=\"250\" value={rangeValue}\n                    onChange={(e) => setRangeValue(e.target.value)} />\n                <ul>\n                    {radios.map((radio) => {\n                        return (\n                        <li key={radio}>\n                            <input type=\"radio\" value={radio} id={radio}\n                                checked={radio === selecetedRadio} onChange={(e)=>\n                                     setSelecetedRadio(e.target.value)} />\n                            <label htmlFor={radio}>{radio}</label>\n                        </li>\n                        )\n                    }\n                    )}\n                </ul>\n            </div>\n            <div className=\"cancel\">\n                {selecetedRadio && <h5 onClick= {() => setSelecetedRadio(\"\")}>Annuler recherche</h5>}\n            </div>\n            <ul className=\"countries-list\">\n                {sortedData\n                .filter((country) => country.region.includes\n                (selecetedRadio))\n                .map((country, index) => (\n                    <Card country={country} key={index} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}